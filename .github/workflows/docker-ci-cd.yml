name: TicTacToe Docker CI/CD

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push client Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./client
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/tic-tac-toe-client:latest
            ghcr.io/${{ github.repository_owner }}/tic-tac-toe-client:${{ github.sha }}

      - name: Build and push server Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/tic-tac-toe-server:latest
            ghcr.io/${{ github.repository_owner }}/tic-tac-toe-server:${{ github.sha }}

      - name: Create deployment directory on production server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p ~/tic-tac-toe
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Copy docker-compose and Caddyfile to production server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml,Caddyfile"
          target: ~/tic-tac-toe/

      - name: Deploy to production server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/tic-tac-toe/
            docker compose pull && docker compose down && docker compose up -d || echo "Deployment failed"
