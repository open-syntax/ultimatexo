services:
  server:
    image: ${IMAGE_BASE}-server:${RELEASE_VERSION}
    container_name: ultimatexo-server
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - RUST_BACKTRACE=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6767/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "com.docker.compose.service=ultimatexo-server"

  client:
    image: ${IMAGE_BASE}-client:${RELEASE_VERSION}
    container_name: ultimatexo-client
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "com.docker.compose.service=ultimatexo-client"

  proxy:
    image: ghcr.io/slothcroissant/caddy-cloudflaredns:latest
    container_name: ultimatexo-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - caddy_logs:/var/log/caddy
    environment:
      ACME_AGREE: "true"
      CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL}
      CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN}
    depends_on:
      server:
        condition: service_healthy
      client:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "com.docker.compose.service=ultimatexo-proxy"

networks:
  app-network:
    driver: bridge
    name: ultimatexo-network
    labels:
      - "com.docker.compose.network=ultimatexo"

volumes:
  caddy_data:
    name: ultimatexo-caddy-data
    labels:
      - "com.docker.compose.volume=caddy-data"
  caddy_config:
    name: ultimatexo-caddy-config
    labels:
      - "com.docker.compose.volume=caddy-config"
  caddy_logs:
    name: ultimatexo-caddy-logs
    labels:
      - "com.docker.compose.volume=caddy-logs"
